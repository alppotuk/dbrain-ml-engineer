version: "3.1"

services:
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - kafka_network

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LOG_DIRS: /kafka/logs
    depends_on:
      - zookeeper
    networks:
      - kafka_network

  scraper:
    build:
      context: ./scraper
      dockerfile: Dockerfile.scraper
    container_name: scraper
    depends_on:
      - kafka
      - zookeeper
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    volumes:
      - ./data.json:/app/data.json
    networks:
      - kafka_network

  flask:
    build:
      context: ./flask
      dockerfile: Dockerfile.flask
    container_name: flask
    depends_on:
      - scraper
    ports:
      - "5000:5000"
    volumes:
      - ./data.json:/app/data.json
    networks:
      - kafka_network

networks:
  kafka_network:
    driver: bridge
